str(trash)  # check
trash$month = sapply(trash$month,function(x){as.factor(x)})
trash$year = sapply(trash$year,function(y){as.factor(y)}
str(trash)  # check
trash = read.csv('./data/trash.csv')
trash$month = sapply(trash$month,function(x){as.factor(x)})
trash$year = sapply(trash$year,function(y){as.factor(y)}
str(trash)  # check
View
View(trash)
trash$month = sapply(trash$month,function(x){as.factor(x)})
trash$year = sapply(trash$year,function(y){as.factor(y)})
str(trash)  # check
library(ggplot2)
summary(trash)
head(trash)
ggplot(data = trash, aes(x = year , y =  incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'population', x = 'sex',
title = 'Titanic Sex v.s. Survival Box')
library(ggplot2)
summary(trash)
head(trash)
ggplot(data = trash, aes(x = month , y =  the_amount_of_trash  )) +
geom_boxplot() + coord_flip() +
labs( y = 'population', x = 'sex',
title = 'Titanic Sex v.s. Survival Box')
trash = read.csv('./data/Shigellosis.csv')
View(Shigellosis)
Shigellosis = read.csv('./data/Shigellosis.csv')
View(Shigellosis)
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
str(Shigellosis)
level(h)
level(Shigellosis$h)
levels(Shigellosis$h)
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
Shigellosis %>% filter(h != "10月14日" | h != "5月9日"| h!= "0"|h!= "1"|h!= "2"|h!= "3"|h!= "4")
str(trash)  # check
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
Shigellosis = Shigellosis %>% filter(h != "10月14日" | h != "5月9日"| h!= "0"|h!= "1"|h!= "2"|h!= "3"|h!= "4")
str(trash)  # check
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
Shigellosis = Shigellosis %>% filter(h != "10月14日" & h != "5月9日"& h!= "0"& h!= "1"& h!= "2"& h!= "3"& h!= "4")
str(trash)  # check
levels(Shigellosis&h)
levels(Shigellosis$h)
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
Dysentery = Shigellosis %>% filter(h != "10月14日" & h != "5月9日"& h!= "0"& h!= "1"& h!= "2"& h!= "3"& h!= "4")
str(trash)  # check
levels(Dysentery$h)
str(Dysentery)
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
Dysentery = Shigellosis %>% filter(h == "15-19" | h == "20-24"| h== "25-29" | h==  "30-34" | h== "35-39"| h== "40-44"| h== "45-49" |       h=="50-54"|h=="55-59"|h== "60-64"|h=="65-69"|h=="70+")
str(trash)  # check
levels(Dysentery$h)
View(Dysentery)
View(Shigellosis)
Shigellosis = read.csv('./data/Shigellosis.csv')
colnames(Shigellosis)= c('a','b','c','d','e','f','g','h','i')
Dysentery = Shigellosis %>% filter(h == "15-19" | h == "20-24"| h== "25-29" | h==  "30-34" | h== "35-39"| h== "40-44"| h== "45-49" |       h=="50-54"|h=="55-59"|h== "60-64"|h=="65-69"|h=="70+")
str(trash)  # check
View(Shigellosis)
colnames(Shigellosis)= c('dysentery','year','month','county','area','sex','whether_to_move_overseas','age','number_of_people')
Dysentery = Shigellosis %>% filter(h == "15-19" | h == "20-24"| h == "25-29" | h ==  "30-34" | h == "35-39"| h == "40-44"| h == "45-49" |       h=="50-54"|h =="55-59"|h == "60-64"|h =="65-69"|h =="70+")
colnames(Shigellosis)= c('dysentery','year','month','county','area','sex','whether_to_move_overseas','age','number_of_people')
Dysentery = Shigellosis %>% filter(age == "15-19" | age == "20-24"| age == "25-29" | age ==  "30-34" | age == "35-39"| age == "40-44"| age == "45-49"|       age =="50-54"|age =="55-59"|age == "60-64"|age =="65-69"|age =="70+")
str(Dysentery)  # check
library(ggplot2)
summary(Dysentery)
head(Dysentery)
ggplot(data = Dysentery, aes(x = month , y = number_of_people )) +
geom_boxplot() + coord_flip() +
labs( y = 'population', x = 'sex',
title = 'Titanic Sex v.s. Survival Box')
trash = read.csv('./data/trash.csv')
View(trash)
knitr::opts_chunk$set(echo = TRUE)
trash = read.csv('./data/trash.csv')
str(trash)  # check
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
trash = read.csv('./data/trash.csv')
str(trash)  # check
library(ggplot2)
summary(trash)
head(trash)
ggplot(data = trash, aes(x = incineration_performance , y = plant )) +
geom_boxplot() + coord_flip() +
labs( y = 'population', x = 'sex',
title = 'Titanic Sex v.s. Survival Box')
library(ggplot2)
summary(trash)
head(trash)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'population', x = 'sex',
title = 'Titanic Sex v.s. Survival Box')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
trash = read.csv('./data/trash.csv')
str(trash)  # check
head(trash)
summary(trash)
require(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'population', x = 'sex',
title = 'Titanic Sex v.s. Survival Box')
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
#以下函式計算95%信賴區間
with(trash,
tapply(incineration_performance, plant,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Age ~ Sex, data = Survived)
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
library(ggplot2)
ggplot(data = trash, aes(x = incineration_performance , y =  plant)) +
geom_boxplot() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
library(ggplot2)
ggplot(data = trash, aes(x = incineration_performance , y =  plant)) +
geom_boxplot() +
labs(
title = 'Different Incinerationplant  v.s. incineration performance')
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
trash$plant
trash$plant[1]
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance~ plant, data = trash)
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance~ plant[1:2], data = trash)
trash$plant[1:2]
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance[1:72]~ plant[1:72], data = trash)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(incineration_performance~ plant, data = trash, var.equal = TRUE)
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance[1:72]~ plant[1:72], data = trash)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(incineration_performance[1:72]~ plant[1:72], data = trash, var.equal = TRUE)
trash$month
levels(trash$month)
#先把父母教育欄位內各個水準順序定下來(order of factors)
dta$parental.education <- factor(trash$month,
levels = c(1:12))
#先把父母教育欄位內各個水準順序定下來(order of factors)
trash$month <- factor(trash$month,
levels = c(1:12))
trash$month
#先把父母教育欄位內各個水準順序定下來(order of factors)
trash$month <- factor(trash$month,
levels = c(1:12))
#看不同父母教育程度下的數學分數平均數
tapply(trash$incineration_performance, trash$month, mean)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
library(Hmisc)
install.packages('Hmisc')
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 5)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,80, by = 5)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(10,80, by = 5)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(45,80, by = 5)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(45,80, by = 1)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(45,80, by = 10)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 5) +
scale_y_continuous(breaks = seq(45,80, by = 10)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(45,80, by = 10)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
trash = read.csv('./data/trash.csv')
str(trash)  # check
head(trash)
summary(trash)
require(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
#以下函式計算95%信賴區間
with(trash,
tapply(incineration_performance, plant,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance[1:72]~ plant[1:72], data = trash)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(incineration_performance[1:72]~ plant[1:72], data = trash, var.equal = TRUE)
library(Hmisc)
#先把父母教育欄位內各個水準順序定下來(order of factors)
trash$month <- factor(trash$month,
levels = c(1:12))
#看不同月份下的焚化績效平均數
tapply(trash$incineration_performance, trash$month, mean)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(45,80, by = 10)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(45,80, by = 10)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 10)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(50,150, by = 5)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(50,100, by = 5)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 5)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#先把父母教育欄位內各個水準順序定下來(order of factors)
neihu <- trash %>% filter(plant=="內湖")
View(neihu)
#先把父母教育欄位內各個水準順序定下來(order of factors)
neihu <- trash %>% filter(plant=="內湖")
neihu$month <- factor(neihu$month,
levels = c(1:12))
#看不同月份下的焚化績效平均數
tapply(neihu$incineration_performance, neihu$month, mean)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = neihu,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 5)) +
geom_hline(yintercept = mean(neihu$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
anova(m1 <- lm(incineration_performance ~ month, data = neihu))
neihu.mucha <- trash %>% filter(plant != "北投")
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance~ plant, data = neihu.mucha)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(incineration_performance~ plant, data = neihu.mucha, var.equal = TRUE)
#先把父母教育欄位內各個水準順序定下來(order of factors)
trash$month <- factor(trash$year,
levels = c(103,104,105))
#看不同月份下的焚化績效平均數
tapply(trash$incineration_performance, trash$month, mean)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 5)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 5)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#先把父母教育欄位內各個水準順序定下來(order of factors)
trash$month <- factor(trash$plant,
levels = c("內湖","木柵","北投"))
#看不同月份下的焚化績效平均數
tapply(trash$incineration_performance, trash$month, mean)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 5)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(0,100, by = 10)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(50,100, by = 10)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = incineration_performance )) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(50,100, by = 1)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = the_amount_of_incineration )) +
geom_boxplot() + coord_flip() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = the_amount_of_incineration )) +
geom_boxplot() + coord_flip() +
labs( y = 'the_amount_of_incineration', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
#以下函式計算95%信賴區間
with(trash,
tapply(the_amount_of_incineration, plant,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = the_amount_of_incineration )) +
geom_boxplot() + coord_flip() +
labs( y = 'the_amount_of_incineration', x = 'plant',
title = 'Different Incineration plant  v.s. the amount of incineration')
neihu.mucha <- trash %>% filter(plant != "北投")
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( the_amount_of_incineration~ plant, data = neihu.mucha)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(the_amount_of_incineration~ plant, data = neihu.mucha, var.equal = TRUE)
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = the_amount_of_incineration)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(50,100, by = 1)) +
geom_hline(yintercept = mean(trash$incineration_performance) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = trash,
aes(x = month, y = the_amount_of_incineration)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(50,100, by = 1)) +
geom_hline(yintercept = mean(trash$the_amount_of_incineration) ,
linetype = 'dotted') +
labs(x = 'month', y = 'incineration performance') +
coord_flip()
#先把父母教育欄位內各個水準順序定下來(order of factors)
trash$month <- factor(trash$month,
levels = c(1:12))
#看不同月份下的焚化績效平均數
tapply(trash$the_amount_of_incineration, trash$month, mean)
library(ggplot2)
ggplot(data = trash, aes(x = plant , y = incineration_performance )) +
geom_boxplot() + coord_flip() +
labs( y = 'incineration_performance', x = 'plant',
title = 'Different Incinerationplant  v.s. incineration performance')
#以下函式計算95%信賴區間
with(trash,
tapply(incineration_performance, plant,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
neihu.mucha <- trash %>% filter(plant != "北投")
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance~ plant, data = neihu.mucha)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(incineration_performance~ plant, data = neihu.mucha, var.equal = TRUE)
mucha.beitou <- trash %>% filter(plant != "內湖")
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance~ plant, data = neihu.beitou)
mucha.beitou <- trash %>% filter(plant != "內湖")
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test( incineration_performance~ plant, data = mucha.beitou)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(incineration_performance~ plant, data = mucha.beitou, var.equal = TRUE)
