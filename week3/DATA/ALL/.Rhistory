knitr::opts_chunk$set(echo = TRUE)
summary(cars)
<li>Parish</li>
# æåç¨* == ç�æ¼   != ä¸ç�æ¼e.g."character" == "character" # æç§å�é¦é åºæ¯å¤§å°(æå¾çå�æ¯æå¤§,å�é¦ç¸ååæ¯å�æ¯æ¸é)
e.g.TRUE < FALSE
setwd("D:/CSX/R-Project_2018Summer")
install.packages(gapminder)
gapminder
comics
install.packages("gapminder")
dplyr
install.packages("dplyr")
install.packages("dplyr")
AnimalDATA = read.csv('./DATA/ALL/test.csv')
View(AnimalDATA)
View(AnimalDATA)
AnimalDATA = read.csv('./DATA/ALL/test.csv')
View(train.csv)
Animaltest = read.csv('./DATA/ALL/test.csv')
Animaltrain = read.csv('./DATA/ALL/train.csv')
View(train.csv)
setwd("D:/CSX/R-Project_2018Summer/week3/DATA/ALL")
Animaltest = read.csv('./DATA/ALL/test.csv')
Animaltrain = read.csv('./DATA/ALL/train.csv')
View(Animaltrain)
View(Animaltest)
View(AnimalDATA)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
View(titanictest)
View(titantrain)
View(titanictrain)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictest, titanictrain) # 將兩組乘客資料合併成一個檔
class(titanictest)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictest, titanictrain) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictest, titanictrain) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows
library('ggplot2') # visualization
library('ggthemes') # visualization
install.packages("ggthemes")
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
install.packages("mice")
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
install.packages("randomForest")
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictest, titanictrain) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictest, titanictrain) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dylpr'
str(all_data)  # check
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dylpr'
str(all_data)  # check
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dylpr'
str(all_data)  # check
View(all_data)
all_data$Deck<-factor(sapply(all_data$Cabin, function(x) strsplit(x, NULL)[[1]][1]))
set.seed(754)
# Build the model (note: not all possible variables are used)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
set.seed(754)
# Build the model (note: not all possible variables are used)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
set.seed(754)
# Build the model (note: not all possible variables are used)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked + Title +
FsizeD + Child + Mother,
data = train)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
all_data <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dylpr'
str(all_data)  # check
