docs.cos.sim <- apply(docs.tfidf, 2, cos, y = docs.tfidf[, 1])
docs.cos.sim
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
f <- sort(rowSums(docs.tfidf), decreasing = T)
docs.df <- data.frame(
word = names(f),
freq = f
)
wordcloud(docs.df$word, docs.df$freq, scale=c(5,0.1), colors=brewer.pal(8, "Dark2"))
docs <- readLines("sy1.txt")
docs.corpus <- Corpus(VectorSource(docs))
docs.seg <- tm_map(docs.corpus, segmentCN) # 斷詞
docs.tdm <- TermDocumentMatrix(docs.seg, control = list()) # 把斷詞結果轉換成 term-document matrix
inspect(docs.tdm)
docs.tf <- apply(as.matrix(docs.tdm), 2, function(doc) {doc / sum(doc)})
idf.function <- function(word_doc) { log2( (length(word_doc)+1) / nnzero(word_doc) ) }
docs.idf <- apply(docs.tdm, 1, idf.function)
docs.tfidf <- docs.tf * docs.idf
head(docs.tfidf)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
docs.corpus <- Corpus(DirSource("./harry_potter_summaries"))
docs.seg <- tm_map(docs.corpus, segmentCN)
docs.tdm <- TermDocumentMatrix(docs.seg)
inspect(docs.tdm)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
docs.corpus <- Corpus(DirSource("./harry_potter_summaries"))
docs.seg <- tm_map(docs.corpus, segmentCN)
docs.tdm <- TermDocumentMatrix(docs.seg)
inspect(docs.tdm)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
docs.corpus <- Corpus(DirSource("./harry_potter_summaries"))
docs.seg <- tm_map(docs.corpus, segmentCN)
docs.corpus <- Corpus(DirSource("./harry_potter_summaries"))
docs.seg <- tm_map(docs.corpus, segmentCN)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
docs.corpus <- Corpus(DirSource("./harry_potter_summaries"))
docs.seg <- tm_map(docs.corpus, segmentCN)
docs.corpus <- Corpus(DirSource("./harry_potter_summaries"))
docs.seg <- tm_map(docs.corpus, segmentCN)
inspect(docs.tdm)
knitr::opts_chunk$set(echo = TRUE)
dta <- read.table(file = "data/TIMSS2011TW.txt",
header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
dta <- read.table(file = "data/TIMSS2011TW.txt",
header = TRUE)
str(dta)
head(dta)
summary(dta)
require(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
library(gplot)
library(ggplot2)
require(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = 'Mathematical Score Box')
setwd("D:/CSX/R-Project_2018Summer/week3")
knitr::opts_chunk$set(echo = TRUE)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
full <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dylpr'
library(dylpr)
library(dplyr)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
full <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dplyr'
str(full)  # check
str(full)
head(full)
summary(full)
ggplot(data = full$Survived, aes(x = Sex, y = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Age', x = 'Sex',
title = 'Mathematical Score Box')
ggplot(data = full, aes(x = Sex, y = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Age', x = 'Sex',
title = 'Mathematical Score Box')
View(full)
full$Survived == 1 <- all_survived
full$Survived.female[full$Sex == 'female' & full$Survived==1]
full$Survived.female[full$Sex == 'female' & full$Survived == TRUE]
ggplot(data = full, aes(x = Sex, y = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Age', x = 'Sex',
title = 'Mathematical Score Box')
# Adding Mother variable
full$Mother <- 'Not Mother'  # 將此列加入
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <-'Mother'  # Parch為小孩的數量
# Show counts
table(full$Mother, full$Survived)
full$Survived_female
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# Titles with very low cell counts to be combined to "rare" level
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
# Also reassign mlle, ms, and mme accordingly
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
# Show title counts by sex again
table(full$Sex, full$Title)
library('ggplot2') # visualization
library('ggthemes') # visualization
library('scales') # visualization
library('dplyr') # data manipulation
library('mice') # imputation
library('randomForest') # classification algorithm
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
full <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dplyr'
str(full)  # check
# Grab title from passenger names
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
# Show title counts by sex
table(full$Sex, full$Title)
# Titles with very low cell counts to be combined to "rare" level
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
# Also reassign mlle, ms, and mme accordingly
full$Title[full$Title == 'Mlle']        <- 'Miss'
full$Title[full$Title == 'Ms']          <- 'Miss'
full$Title[full$Title == 'Mme']         <- 'Mrs'
full$Title[full$Title %in% rare_title]  <- 'Rare Title'
# Show title counts by sex again
table(full$Sex, full$Title)
# Finally, grab surname from passenger name
full$Surname <- sapply(full$Name,
function(x) strsplit(x, split = '[,.]')[[1]][1])
# Create a family size variable including the passenger themselves
full$Fsize <- full$SibSp + full$Parch + 1 # 1代表乘客本身
# Create a family variable
full$Family <- paste(full$Surname, full$Fsize, sep='_')
ggplot(full[1:891,], aes(x = Fsize, fill = factor(Survived))) +  # 編號891後的資料Survived為NA
geom_bar(stat='count', position='dodge') +
scale_x_continuous(breaks=c(1:11)) +  # max(full$Fsize)為11
labs(x = 'Family Size') +
theme_few() # 去掉背景的網格,變白背黑框
# Discretize family size
full$FsizeD[full$Fsize == 1] <- 'singleton'
full$FsizeD[full$Fsize < 5 & full$Fsize > 1] <- 'small'
full$FsizeD[full$Fsize > 4] <- 'large'
# Show family size by survival using a mosaic plot
mosaicplot(table(full$FsizeD, full$Survived), main='Family Size by Survival', shade=TRUE)
# Create the column child, and indicate whether child or adult
full$Child[full$Age < 18] <- 'Child'
full$Child[full$Age >= 18] <- 'Adult'
# Show counts
table(full$Child, full$Survived)
# Adding Mother variable
full$Mother <- 'Not Mother'  # 將此列加入
full$Mother[full$Sex == 'female' & full$Parch > 0 & full$Age > 18 & full$Title != 'Miss'] <-'Mother'  # Parch為小孩的數量
# Show counts
table(full$Mother, full$Survived)
full$Survived_female[full$Sex == 'female' & full$Survived == TRUE] <-Survived_female
full$Survived_female[full$Sex == 'female' & full$Survived == TRUE] <- "Survived_female"
view(full)
View(full)
full$Survived_male[full$Sex =="male" & full$Survived == TRUE] <- "Survived_male"
all_Survived = c(full$Survived_female,full$Survived_male)
all_Survived
class(all_Survived)
class(full$Survived_female)
View(all_Survived)
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & Survived == 1 ] <- "Survived_female"
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
knitr::opts_chunk$set(echo = TRUE)
dta <- read.table(file = "data/TIMSS2011TW.txt",
header = TRUE)
str(dta)
head(dta)
summary(dta)
require(ggplot2)
#將底下的圖設定為黑白配色（theme_bw）
old <- theme_set(theme_bw())
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = 'Mathematical Score Box')
#以下函式計算95%信賴區間
with(dta,
tapply(math, gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(math ~ gender, data = dta)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(math ~ gender, data = dta, var.equal = TRUE)
#先把父母教育欄位內各個水準順序定下來(order of factors)
dta$parental.education <- factor(dta$parental.education,
levels = c('elementary school',
'junior high school',
'high school',
'college',
'university above'))
#看不同父母教育程度下的數學分數平均數
tapply(dta$math, dta$parental.education, mean)
library(Hmisc)
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
ggplot(data = full, aes(x = Age, y = all_Survived )) +
geom_boxplot() + coord_flip() +
labs( y = 'Svrvived_sex', x = 'Age',
title = 'Mathematical Score Box')
sapply(full$all_Survived, function(x){x !=0|!=NA})
sapply(full$all_Survived, function(x){x !=0|x!=NA})
sapply(full$all_Survived, function(x){x !=0|x!=NA}) <- all_Survived
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
ggplot(data = full, aes(y = all_Survived, x = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Svrvived_sex', x = 'Age',
title = 'Mathematical Score Box')
full$Age[- Age==0,] <- data.fame(all)
library(base)
full$Age[- Age==0,] <- data.fame(all)
full$Age[- Age==0,] <- data.frame(all)
full$Age[- Age==0] <- data.frame(all)
data.frame(a)
full$Title <- gsub('Survived_female', '', a$all_Survived)
a <- titanictest
full$all_Survived <- gsub('Survived_female', '', a$all_Survived)
a <- titanictest
a$all_Survived <- gsub('Survived_female', '', full$all_Survived)
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
a$all_Survived <- gsub('Survived_female', '', full$all_Survived)
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
a$all_Survived <-  c(full$all_Survived= "Survived_female", "Survived_male")
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
a$all_Survived <-  c(full$all_Survived== "Survived_female", "Survived_male")
full$all_Survived <- full$Survived
full$all_Survived[full$Sex == "female" & full$Survived == 1 ] <- "Survived_female"
full$all_Survived[full$Sex == "male" & full$Survived == 1 ] <- "Survived_male"
a$all_Survived <-  sapply(full$all_Survived,function(x{x="Survived_female"|x="Survived_male"}))
a<-  full %>% filter(Survived != 'NA'|Survived != 0)
View(a)
a<-  full %>% filter(Survived != 'NA')
str(full)
a<-  full %>% filter(Survived != 'NA'|Survived != FALSE)
View(a)
a <-  full %>% filter(Survived != 'NA')
a <- full %>% filter(Survived == 1)
View(a)
a <-  full %>% filter(Survived != 'NA' & Survived == 1)
View(a)
a <-  full %>% filter(Survived == 1 & Age != 'NA')
View(a)
summary(a)
a <-  full %>% filter(Survived == 1 & Age != 'NA')
summary(a)
ggplot(data = a, aes(y = Sex, x = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Sex', x = 'Age',
title = 'Mathematical Score Box')
str(a)
library(ggplot2)
a <-  full %>% filter(Survived == 1 & Age != 'NA')
summary(a)
ggplot(data = a, aes(y = Sex, x = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Sex', x = 'Age',
title = 'Mathematical Score Box')
head(dta)
head(a)
ggplot(data = a, aes(x = Age, y = Sex )) +
geom_boxplot() + coord_flip() +
labs( y = 'Sex', x = 'Age',
title = 'Mathematical Score Box')
knitr::opts_chunk$set(echo = TRUE)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
full <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dplyr'
str(full)  # check
str(full)
head(full)
summary(full)
library(ggplot2)
a <-  full %>% filter(Survived == 1 & Age != 'NA')
summary(a)
head(a)
ggplot(data = a, aes(x = Age, y = Sex )) +
geom_boxplot() + coord_flip() +
labs( y = 'Sex', x = 'Age',
title = 'Mathematical Score Box')
View(titanictest)
View(titanictrain)
titanictest = read.csv('./DATA/ALL/test.csv')
titanictrain = read.csv('./DATA/ALL/train.csv')
full <- bind_rows(titanictrain, titanictest) # 將兩組乘客資(data.frame)料合併成一個檔,bind_rows在'dplyr'
str(full)  # check
library(ggplot2)
a <-  titanictrain %>% filter(Survived == 1 & Age != 'NA')
summary(a)
head(a)
ggplot(data = a, aes(x = Age, y = Sex )) +
geom_boxplot() + coord_flip() +
labs( y = 'Sex', x = 'Age',
title = 'Mathematical Score Box')
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = 'Mathematical Score Box')
library(ggplot2)
a <-  titanictrain %>% filter(Survived == 1 & Age != 'NA')
summary(a)
head(a)
ggplot(data = a, aes(x = Sex, y = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Age', x = 'Sex',
title = 'Mathematical Score Box')
library(ggplot2)
Survived <-  titanictrain %>% filter(Survived == 1 & Age != 'NA')
summary(Survived)
head(Survived)
ggplot(data = Survived, aes(x = Sex, y = Age )) +
geom_boxplot() + coord_flip() +
labs( y = 'Age', x = 'Sex',
title = 'Titanic alive Box')
#以下函式計算95%信賴區間
with(Survived,
tapply(math, gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#以下函式計算95%信賴區間
with(Survived,
tapply(Age, Sex,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#以下函式計算95%信賴區間
with(dta,
tapply(math, gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(Age ~ Sex, data = Survived)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(Age ~ Sex, data = Survived, var.equal = TRUE)
#此函數會預設進行 Welch 校正，以處理兩樣本變異數不相同的問題
t.test(math ~ gender, data = dta)
#可加上參數 var.equal=TRUE 來假設變異數同值(不做Welch校正)
t.test(math ~ gender, data = dta, var.equal = TRUE)
str(dta)
head(dta)
summary(dta)
Survived <-  titanictrain
summary(Survived)
anova(m1 <- lm(math ~ parental.education, data = dta))　#
ggplot(data = dta,
aes(group = parental.education,
y = math, x = educational.resources)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = parental.education,
y = math, x = educational.resources),
method = 'lm', se = F) +
facet_grid( . ~  parental.education) +
labs(x = '教育資源', y = '數學分數')
#把教育資源加進模型
anova(m2 <- update(m1, . ~ . +
educational.resources, data = dta))
#或許不是父母教育而是教育資源造成
anova(m3 <- update(m2, . ~ . - parental.education,  data = dta))
#將結果放在一個list中
res_lm <- lapply(list(m1, m2, m3), summary)
#比較在控制教育資源下，父母教育的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#比較在控制父母教育下，教育資源的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1, m2)
View(dta)
fit_m2 <- data.frame(dta[, c(2, 12, 13)], fitted = fitted(m2), resid = resid(m2),
infl = influence(m2)$hat )
knitr::opts_chunk$set(echo = TRUE)
docs.corpus <- Corpus(DirSource("./harry_potter"))
library(tm)
library(tmcn)
library(factoextra)
library(Matrix)
library(NLP)
library(ggplot2)
docs.corpus <- Corpus(DirSource("./harry_potter"))
docs.seg <- tm_map(docs.corpus, segmentCN)
knitr::opts_chunk$set(echo = TRUE)
docs.corpus <- Corpus(DirSource("./writer"))
docs.seg <- tm_map(docs.corpus, segmentCN)
library(ggplot2)
Survived <-  titanictrain
summary(Survived)
head(Survived)
ggplot(data = Survived, aes(x = Sex, y = Survived )) +
geom_boxplot() + coord_flip() +
labs( y = 'Survived', x = 'Sex',
title = 'Titanic Sex v.s. Survival Box')
knitr::opts_chunk$set(echo = TRUE)
age = read.csv('./data/age.csv')
setwd("D:/CSX/R-Project_2018Summer/week4")
age = read.csv('./data/age.csv')
total = read.csv('./data/total.csv')
View(age)
marriage = read.csv('./data/marriage.csv')
View(marriage)
View(marriage)
marriage = read.csv('./data/marriage.csv',encoding = "UTF-8")
View(marriage)
marriage = read.table(file = "data/marriage_2.txt",
header = TRUE)
marriage = read.table(file = "data/marriage_2.txt",
fileEncoding = "UTF-8-BOM")
marriage = read.table(file = "./data/marriage_2.txt",
fileEncoding = "UTF-8-BOM")
marriage = read.table(file = "./data/marriage_2.txt",
header =TRUE, fileEncoding = "UTF-8-BOM")
marriage = read.table(file = "./data/marriage_2.txt",
header =TRUE, encoding = "UTF-8")
marriage = read.table(file = "./data/marriage_2.txt",
header =TRUE)
marriage = read.table(file = "./data/marriage_2.txt",
header =TRUE, fileEncoding = "UTF-8")
setwd("D:/CSX/R-Project_2018Summer/week4/data")
marriage = read.table(file = "./marriage_2.txt",
header =TRUE, fileEncoding = "UTF-8")
marriage = read.table(file = "./marriage_2.txt",
header =TRUE,fileEncoding="UTF-8")
View(marriage)
marriage = read.csv('./marriage.csv')
View(marriage)
marriage = read.csv('./marriage_1.csv')
View(marriage_1)
View(marriage)
str(marriage)
marriage = read.csv('./marriage_1.csv')
cbind(marriage)=c(1:141319)
library(base)
marriage = read.csv('./marriage_1.csv')
cbind(marriage) = c(1:141319)
marriage = read.csv('./marriage_1.csv')
marriage$count = c(1:141319)
marriage$count=18579
marriage = read.csv('./marriage_1.csv')
marriage$count = c(1:141319)
taipei= marriage %>% filter(count[18579:26786])
library(dplyr)
marriage = read.csv('./marriage_1.csv')
marriage$count = c(1:141319)
taipei= marriage %>% filter(count[18579:26786])
marriage = read.csv('./marriage_1.csv')
marriage$count = c(1:141319)
taipei= marriage %>% filter(count>18578 & count<26786)
View(taipei)
inspect(docs.tdm)
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(NLP)
library(RColorBrewer)
library(jiebaR)
library(jiebaRD)
library(tm)
library(tmcn)
library(Matrix)
library(wordcloud)
library(NLP)
library(RColorBrewer)
library(jiebaR)
library(jiebaRD)
docs.corpus <- Corpus(DirSource("./writer"))
docs.seg <- tm_map(docs.corpus, segmentCN)
